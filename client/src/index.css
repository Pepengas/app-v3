@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(20, 14.3%, 4.1%);
  --muted: hsl(60, 4.8%, 95.9%);
  --muted-foreground: hsl(25, 5.3%, 44.7%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(20, 14.3%, 4.1%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(20, 14.3%, 4.1%);
  --border: hsl(20, 5.9%, 90%);
  --input: hsl(20, 5.9%, 90%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(33, 100%, 50%);
  --secondary-foreground: hsl(211, 100%, 99%);
  --accent: hsl(60, 4.8%, 95.9%);
  --accent-foreground: hsl(24, 9.8%, 10%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(60, 9.1%, 97.8%);
  --ring: hsl(20, 14.3%, 4.1%);
  --radius: 0.5rem;
  
  /* HMU App Custom Colors */
  --primary-dark: hsl(207, 90%, 44%);
  --success: hsl(122, 39%, 49%);
  --warning: hsl(36, 100%, 50%);
  --error: hsl(4, 90%, 58%);
  --surface: hsl(0, 0%, 100%);
  --surface-variant: hsl(0, 0%, 96%);
  --on-surface: hsl(0, 0%, 13%);
  --on-surface-variant: hsl(0, 0%, 46%);
}

.dark {
  --background: hsl(240, 10%, 3.9%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(240, 3.7%, 15.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(240, 10%, 3.9%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(240, 10%, 3.9%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(33, 100%, 50%);
  --secondary-foreground: hsl(211, 100%, 99%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
  --radius: 0.5rem;
  
  /* Dark mode custom colors */
  --primary-dark: hsl(207, 90%, 44%);
  --success: hsl(122, 39%, 49%);
  --warning: hsl(36, 100%, 50%);
  --error: hsl(4, 90%, 58%);
  --surface: hsl(240, 10%, 3.9%);
  --surface-variant: hsl(240, 3.7%, 15.9%);
  --on-surface: hsl(0, 0%, 98%);
  --on-surface-variant: hsl(240, 5%, 64.9%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    font-family: 'Roboto', system-ui, -apple-system, sans-serif;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .material-shadow {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
  }
  
  .material-shadow-lg {
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
  }
  
  .ripple {
    @apply relative overflow-hidden;
    transform: translate3d(0, 0, 0);
  }
  
  .ripple:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.2);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }
  
  .ripple:active:before {
    width: 300px;
    height: 300px;
  }
  
  .floating-action {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }
  
  .floating-action:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.24);
  }

  .smooth-transition {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .fade-in {
    animation: fadeIn 0.4s ease-out;
  }

  .slide-up {
    animation: slideUp 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .stagger-animation {
    animation: slideUp 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .stagger-animation:nth-child(1) { animation-delay: 0.1s; }
  .stagger-animation:nth-child(2) { animation-delay: 0.2s; }
  .stagger-animation:nth-child(3) { animation-delay: 0.3s; }
  .stagger-animation:nth-child(4) { animation-delay: 0.4s; }
  .stagger-animation:nth-child(5) { animation-delay: 0.5s; }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .nav-button {
    transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
    transform: scale(1);
  }

  .nav-button:active {
    transform: scale(0.95);
  }

  .nav-button.active {
    transform: scale(1.05);
  }

  .card-hover {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .card-hover:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
  }

  .tab-content {
    animation: tabSlide 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  @keyframes tabSlide {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .loading-skeleton {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  .bounce-in {
    animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  @keyframes bounceIn {
    0% {
      opacity: 0;
      transform: scale(0.3);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  .hmu-primary {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
  }
  
  .hmu-secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
  }
  
  .hmu-success {
    background-color: hsl(var(--success));
    color: white;
  }
  
  .hmu-warning {
    background-color: hsl(var(--warning));
    color: white;
  }
  
  .hmu-surface {
    background-color: hsl(var(--surface));
    color: hsl(var(--on-surface));
  }
}

@layer utilities {
  .text-on-surface {
    color: hsl(var(--on-surface));
  }
  
  .text-on-surface-variant {
    color: hsl(var(--on-surface-variant));
  }
  
  .bg-surface {
    background-color: hsl(var(--surface));
  }
  
  .bg-surface-variant {
    background-color: hsl(var(--surface-variant));
  }
}
